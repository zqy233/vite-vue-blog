import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.4f23ca35.js";
const __pageData = '{"title":"\u5F00\u53D1\u811A\u672C","description":"","frontmatter":{},"relativePath":"notes/node/npm/\u811A\u672C\u5F00\u53D1.md","lastUpdated":1646642519105}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="\u5F00\u53D1\u811A\u672C" tabindex="-1">\u5F00\u53D1\u811A\u672C <a class="header-anchor" href="#\u5F00\u53D1\u811A\u672C" aria-hidden="true">#</a></h1><p>1.\u521B\u5EFA\u7A7A\u9879\u76EE</p><div class="language-bash"><pre><code><span class="line"><span style="color:#A6ACCD;">mkdir git-quick-push</span></span>\n<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> git-quick-push</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm init -y</span></span>\n<span class="line"></span></code></pre></div><p>2.\u65B0\u5EFAindex.js</p><p>\u884C\u9996\u52A0\u5165 #!/usr/bin/env node \u6307\u5B9A\u5F53\u524D\u811A\u672C\u7531node.js\u8FDB\u884C\u89E3\u6790</p><div class="language-js"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">#! /usr/bin/env node</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><p>3.\u914D\u7F6Epackage.json</p><blockquote><p>node.js \u5185\u7F6E\u4E86\u5BF9\u547D\u4EE4\u884C\u64CD\u4F5C\u7684\u652F\u6301\uFF0Cpackage.json \u4E2D\u7684 bin \u5B57\u6BB5\u53EF\u4EE5\u5B9A\u4E49\u547D\u4EE4\u540D\u548C\u5173\u8054\u7684\u6267\u884C\u6587\u4EF6</p></blockquote><div class="language-json"><pre><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">git-push</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index.js</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>4.\u6267\u884Cnpm link\u94FE\u63A5\u547D\u4EE4\u5230\u5168\u5C40</p><div class="language-bash"><pre><code><span class="line"><span style="color:#A6ACCD;">npm link</span></span>\n<span class="line"></span></code></pre></div><p>\u73B0\u5728\u53EF\u4EE5\u672C\u5730\u4F7F\u7528bin\u91CC\u7684\u547D\u4EE4</p><div class="language-bash"><pre><code><span class="line"><span style="color:#A6ACCD;">git-push</span></span>\n<span class="line"><span style="color:#A6ACCD;">hello world</span></span>\n<span class="line"></span></code></pre></div><div class="language-"><pre><code>\n  // fs.readdirSync(defaultPath).forEach((fileName) =&gt; {\n  //   const dirPath = path.join(defaultPath, fileName)\n  //   const stat = fs.statSync(dirPath) // stat\u7684mtime\u4E3A\u4FEE\u6539\u6587\u4EF6\u65F6\u95F4,\u540E\u7EED\u53EF\u4EE5\u53BB\u5B9E\u73B0\u6700\u540E\u7F16\u8F91\u65F6\u95F4\n  //   // \u662F\u6587\u4EF6\u5939\uFF0C\u5219\u9012\u5F52\n  //   if (stat.isDirectory() === true) {\n  //     i++\n  //     console.log(i, dirPath, fileName)\n  //     findAllMarkDown(dirPath)\n  //   }\n\n  //   // \u5224\u65AD\u5982\u679C\u662Fmarkdown\u6587\u4EF6\uFF0C\u5B58\u50A8\u8DEF\u5F84\u4FE1\u606F\n  //   if (stat.isFile() === true &amp;&amp; fileName.slice(-3) == &#39;.md&#39;) {\n  //     items.push(\n  //       dirPath\n  //         .replace(fullPath, &#39;&#39;)\n  //         .replace(/.md/g, &#39;&#39;)\n  //         .replace(/\\\\/g, &#39;/&#39;)\n  //         .replace(&#39;/&#39;, &#39;&#39;)\n  //     )\n  //   }\n  // }) fs.readdirSync(defaultPath).forEach((fileName) =&gt; {\n    const dirPath = path.join(defaultPath, fileName)\n    const stat = fs.statSync(dirPath) // stat\u7684mtime\u4E3A\u4FEE\u6539\u6587\u4EF6\u65F6\u95F4,\u540E\u7EED\u53EF\u4EE5\u53BB\u5B9E\u73B0\u6700\u540E\u7F16\u8F91\u65F6\u95F4\n    // \u662F\u6587\u4EF6\u5939\uFF0C\u5219\u9012\u5F52\n    if (stat.isDirectory() === true) {\n      i++\n      console.log(i, dirPath, fileName)\n      findAllMarkDown(dirPath)\n    }\n\n    // \u5224\u65AD\u5982\u679C\u662Fmarkdown\u6587\u4EF6\uFF0C\u5B58\u50A8\u8DEF\u5F84\u4FE1\u606F\n    if (stat.isFile() === true &amp;&amp; fileName.slice(-3) == &#39;.md&#39;) {\n      items.push(\n        dirPath\n          .replace(fullPath, &#39;&#39;)\n          .replace(/.md/g, &#39;&#39;)\n          .replace(/\\\\/g, &#39;/&#39;)\n          .replace(&#39;/&#39;, &#39;&#39;)\n      )\n    }\n  })\n</code></pre></div>', 14);
const _hoisted_15 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_15);
}
var ____ = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, ____ as default };
