import { _ as _export_sfc, c as createElementBlock, o as openBlock, b as createBaseVNode } from "./app.7dd7c6af.js";
var _imports_0 = "/vite-vue-blog/assets/image-20220402102813349.6d3b10ac.png";
const __pageData = '{"title":"","description":"","frontmatter":{},"relativePath":"notes/6.other/11.\u9875\u9762\u8BBE\u8BA1/1.\u793A\u4F8B.md","lastUpdated":1650355505244}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createBaseVNode("p", null, [
  /* @__PURE__ */ createBaseVNode("img", {
    src: _imports_0,
    alt: "image-20220402102813349"
  })
], -1);
const _hoisted_2 = /* @__PURE__ */ createBaseVNode("div", { class: "language-" }, [
  /* @__PURE__ */ createBaseVNode("pre", null, [
    /* @__PURE__ */ createBaseVNode("code", null, 'export const rdlfxOptions = {\n  grid: {\n    left: "8%",\n    right: "8%",\n    bottom: "12%"\n  },\n  legend: {\n    show: true,\n    top: "0%",\n    right: "5%",\n    textStyle: {\n      color: "#8e8e8e"\n    },\n    data: rdlfxOptionsArr\n  },\n  tooltip: {\n    show: true,\n    trigger: "axis",\n    formatter(params) {\n      let tooltip = ``\n      params.map(item => {\n        if (item.value) {\n          tooltip = `${item.seriesName} : ${item.value}<br/>`\n        }\n      })\n      return tooltip\n    }\n  },\n  xAxis: [\n    {\n      type: "category",\n      position: "bottom",\n      axisLabel: {\n        color: "#8e8e8e",\n        margin: 10,\n        fontSize: 12,\n        align: "center"\n      },\n      axisLine: {\n        lineStyle: {\n          color: "#eeeeee"\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      data: []\n    },\n    {\n      type: "category",\n      position: "bottom",\n      axisLabel: {\n        color: "#8e8e8e",\n        margin: 10,\n        fontSize: 12,\n        align: "center"\n      },\n      axisLine: {\n        lineStyle: {\n          color: "#eeeeee"\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      data: []\n    },\n    {\n      type: "category",\n      position: "bottom",\n      axisLabel: {\n        color: "#8e8e8e",\n        margin: 10,\n        fontSize: 12,\n        align: "center"\n      },\n      axisLine: {\n        lineStyle: {\n          color: "#eeeeee"\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      data: []\n    }\n  ],\n  yAxis: [\n    {\n      type: "value",\n      nameTextStyle: {\n        color: "#8e8e8e",\n        fontSize: 14,\n        padding: [0, 26, 0, 0]\n      },\n      splitLine: {\n        show: true,\n        interval: 1,\n        lineStyle: {\n          color: "#eeeeee"\n        }\n      },\n      axisLine: {\n        interval: 1,\n        lineStyle: {\n          color: "#eeeeee"\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        color: "#8e8e8e"\n      }\n    },\n    {\n      type: "value",\n      nameTextStyle: {\n        color: "#8e8e8e",\n        fontSize: 14,\n        padding: [0, 26, 0, 0]\n      },\n      axisLine: {\n        lineStyle: {\n          color: "#eeeeee"\n        }\n      },\n      splitLine: {\n        show: true,\n        interval: 1,\n        lineStyle: {\n          color: "#eeeeee"\n        }\n      },\n      axisLabel: {\n        color: "#8e8e8e",\n        formatter: "{value}%"\n      }\n    }\n  ],\n  series: [\n    {\n      name: "\u524D\u65E5\u7535\u91CF",\n      type: "bar",\n      label: {\n        show: true,\n        position: "top"\n      },\n      color: "#988cf8",\n      xAxisIndex: 0,\n      barWidth: 30,\n      data: []\n    },\n    {\n      name: "\u6628\u65E5\u7535\u91CF",\n      type: "bar",\n      label: {\n        show: true,\n        position: "top"\n      },\n      color: "#7dc9c4",\n      xAxisIndex: 1,\n      barWidth: 30,\n      data: []\n    },\n    {\n      name: "\u53BB\u5E74\u540C\u671F",\n      type: "bar",\n      label: {\n        show: true,\n        position: "top"\n      },\n      color: "#79afef",\n      xAxisIndex: 2,\n      barWidth: 30,\n      data: []\n    }\n    // {\n    //     name: "\u540C\u6BD4\u589E\u957F\u7387",\n    //     type: "line",\n    //     symbol: "1",\n    //     smooth: true,\n    //     color: "#2571e8",\n    //     label: {\n    //         show: true,\n    //         position:"right",\n    //         formatter: \'{c}%\'\n    //     },\n    //     yAxisIndex: 1,\n    //     data: [\n    //         2500,\n    //         2200,\n    //         1800,\n    //     ],\n    //     lineStyle: {\n    //         width: 2,\n    //         color: "#2571e8"\n    //     },\n    //     areaStyle: {\n    //         color: new Echarts.graphic.LinearGradient(\n    //             0,\n    //             0,\n    //             0,\n    //             1,\n    //             [\n    //                 {\n    //                     offset: 0,\n    //                     color: "rgba(37,113,232,0.4)"\n    //                 },\n    //                 { offset: 1, color: "rgba(255,255,255,0)" }\n    //             ]\n    //         )\n    //     },\n    //     markPoint: {\n    //         // data: [{ type: "max" }, { type: "min" }]\n    //     }\n    // },\n    // {\n    //     name: "\u73AF\u6BD4\u589E\u957F\u7387",\n    //     type: "line",\n    //     symbol: "1",\n    //     smooth: true,\n    //     color: "#ef9273",\n    //     label: {\n    //         show: true,\n    //         position:"right",\n    //         formatter: \'{c}%\'\n    //     },\n    //     yAxisIndex: 1,\n    //     data: [\n    //         2500,\n    //         2000,\n    //         1800,\n    //     ],\n    //     lineStyle: {\n    //         width: 2,\n    //         color: "#ef9273"\n    //     },\n    //     areaStyle: {\n    //         color: new Echarts.graphic.LinearGradient(\n    //             0,\n    //             0,\n    //             0,\n    //             1,\n    //             [\n    //                 {\n    //                     offset: 0,\n    //                     color: "rgba(239,146,115,0.4)"\n    //                 },\n    //                 { offset: 1, color: "rgba(255,255,255,0)" }\n    //             ]\n    //         )\n    //     },\n    //     markPoint: {\n    //         // data: [{ type: "max" }, { type: "min" }]\n    //     }\n    // }\n  ]\n}\n')
  ])
], -1);
const _hoisted_3 = [
  _hoisted_1,
  _hoisted_2
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_3);
}
var _1___ = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, _1___ as default };
