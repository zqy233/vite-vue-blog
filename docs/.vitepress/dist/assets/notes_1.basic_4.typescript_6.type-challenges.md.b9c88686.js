import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.113a9d84.js";
const __pageData = '{"title":"type-challenges","description":"","frontmatter":{},"headers":[{"level":2,"title":"warm-up","slug":"warm-up"},{"level":2,"title":"13.helloworld","slug":"_13-helloworld"},{"level":3,"title":"\u9898\u76EE-en","slug":"\u9898\u76EE-en"},{"level":3,"title":"\u9898\u76EE-cn","slug":"\u9898\u76EE-cn"},{"level":3,"title":"\u89E3\u7B54","slug":"\u89E3\u7B54"},{"level":2,"title":"easy","slug":"easy"},{"level":2,"title":"4.pick","slug":"_4-pick"},{"level":3,"title":"\u9898\u76EE-en","slug":"\u9898\u76EE-en-1"},{"level":3,"title":"\u9898\u76EE-cn","slug":"\u9898\u76EE-cn-1"},{"level":3,"title":"\u89E3\u7B54","slug":"\u89E3\u7B54-1"},{"level":2,"title":"268.if","slug":"_268-if"}],"relativePath":"notes/1.basic/4.typescript/6.type-challenges.md","lastUpdated":1650207095923}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="type-challenges" tabindex="-1">type-challenges <a class="header-anchor" href="#type-challenges" aria-hidden="true">#</a></h1><blockquote><p>\u5B66\u4E60typscript\u7684\u5F00\u6E90\u4ED3\u5E93</p><p>\u5730\u5740\uFF1A<a href="https://github.com/type-challenges/type-challenges" target="_blank" rel="noopener noreferrer">https://github.com/type-challenges/type-challenges</a></p></blockquote><h2 id="warm-up" tabindex="-1">warm-up <a class="header-anchor" href="#warm-up" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4E0B\u65B9\u9898\u76EE\u5217\u8868\u4E3A<code>\u70ED\u8EAB</code>\u9898\uFF0C\u603B\u6570\u91CF\u4E3A<code>1</code></p></div><h2 id="_13-helloworld" tabindex="-1">13.helloworld <a class="header-anchor" href="#_13-helloworld" aria-hidden="true">#</a></h2><h3 id="\u9898\u76EE-en" tabindex="-1">\u9898\u76EE-en <a class="header-anchor" href="#\u9898\u76EE-en" aria-hidden="true">#</a></h3><p>Hello, World!</p><p>In Type Challenges, we use the type system itself to do the assertion</p><p>For this challenge, you will need to change the following code to make the tests pass (no type check errors)</p><h3 id="\u9898\u76EE-cn" tabindex="-1">\u9898\u76EE-cn <a class="header-anchor" href="#\u9898\u76EE-cn" aria-hidden="true">#</a></h3><p>Hello, World!</p><p>\u5728Type Challenges\uFF0C\u6211\u4EEC\u4F7F\u7528\u7C7B\u578B\u7CFB\u7EDF\u81EA\u8EAB\u6765\u5B9E\u73B0\u81EA\u52A8\u5224\u9898(\u65AD\u8A00)</p><p>\u5728\u8FD9\u4E2A\u6311\u6218\u4E2D\uFF0C\u4F60\u9700\u8981\u4FEE\u6539\u4E0B\u65B9\u7684\u4EE3\u7801\u4F7F\u5F97\u6D4B\u8BD5\u901A\u8FC7\uFF08\u6CA1\u6709\u7C7B\u578B\u9519\u8BEF\uFF09</p><div class="language-ts"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// expected to be string</span></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloWorld</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// you should make this work</span></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Expect</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Equal</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">HelloWorld</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;&gt;</span></span>\n<span class="line"></span></code></pre></div><h3 id="\u89E3\u7B54" tabindex="-1">\u89E3\u7B54 <a class="header-anchor" href="#\u89E3\u7B54" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloWorld</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"></span></code></pre></div><h2 id="easy" tabindex="-1">easy <a class="header-anchor" href="#easy" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4E0B\u65B9\u9898\u76EE\u5217\u8868\u4E3A<code>\u7B80\u5355</code>\u9898\uFF0C\u603B\u6570\u91CF\u4E3A<code>13</code></p></div><h2 id="_4-pick" tabindex="-1">4.pick <a class="header-anchor" href="#_4-pick" aria-hidden="true">#</a></h2><h3 id="\u9898\u76EE-en-1" tabindex="-1">\u9898\u76EE-en <a class="header-anchor" href="#\u9898\u76EE-en-1" aria-hidden="true">#</a></h3><p>Implement the built-in <code>Pick&lt;T, K&gt;</code> generic without using it</p><p>Constructs a type by picking the set of properties <code>K</code> from <code>T</code></p><p>For example</p><h3 id="\u9898\u76EE-cn-1" tabindex="-1">\u9898\u76EE-cn <a class="header-anchor" href="#\u9898\u76EE-cn-1" aria-hidden="true">#</a></h3><p>\u5B9E\u73B0 TS \u5185\u7F6E\u7684 <code>Pick&lt;T, K&gt;</code>\uFF0C\u4F46\u4E0D\u53EF\u4EE5\u4F7F\u7528\u5B83</p><p>\u4ECE\u7C7B\u578B <code>T</code> \u4E2D\u9009\u62E9\u51FA\u5C5E\u6027 <code>K</code>\uFF0C\u6784\u9020\u6210\u4E00\u4E2A\u65B0\u7684\u7C7B\u578B</p><p>\u4E3E\u4E2A\u4F8B\u5B50</p><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Todo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">description</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TodoPreview</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyPick</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Todo</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">completed</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> todo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TodoPreview</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Clean room</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">completed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="\u89E3\u7B54-1" tabindex="-1">\u89E3\u7B54 <a class="header-anchor" href="#\u89E3\u7B54-1" aria-hidden="true">#</a></h3><p><code>K extends keyof T</code>, <code>extends</code>\u7528\u4E8E\u9650\u5236\uFF0C<code>keyof</code>\u7528\u4E8E\u904D\u5386\u5BF9\u8C61\u7684\u6BCF\u4E2A\u952E\uFF0C\u52A0\u8D77\u6765\u5C31\u662F\u8868\u793AK\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u5FC5\u987B\u662FT\u5BF9\u8C61\u6240\u62E5\u6709\u7684\uFF0C\u5373K\u5BF9\u8C61\u5FC5\u987B\u662FT\u5BF9\u8C61\u7684<code>\u5B50\u96C6</code></p><p><code>[key in K]</code>\uFF0C\u7C7B\u4F3Cjs\u4E2D<code>for(let key in K)</code>\u8BED\u6CD5\uFF0Ckey\u662F\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C<code>[key in K]</code>\u8868\u793A\u904D\u5386\u53D6\u51FAK\u5BF9\u8C61\u7684\u6BCF\u4E2A\u5C5E\u6027\u540D</p><p><code>T[key]</code>\uFF0Cjs\u4E2D\u8BE5\u8BED\u6CD5\u8868\u793A\u6839\u636E\u5BF9\u8C61\u5C5E\u6027\u540D\u83B7\u53D6\u5BF9\u5E94\u7684<code>\u503C</code>\uFF0C\u800Cts\u4E2D\u8BE5\u8BED\u6CD5\u8868\u793A\u6839\u636E\u5BF9\u8C61\u5C5E\u6027\u540D\u83B7\u53D6\u5BF9\u5E94<code>\u7C7B\u578B</code></p><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyPick</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">K</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">keyof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#FFCB6B;">key</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">K</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">key</span><span style="color:#A6ACCD;">]</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="_268-if" tabindex="-1">268.if <a class="header-anchor" href="#_268-if" aria-hidden="true">#</a></h2><p>\u9650\u5236C\u7684\u7C7B\u578B\u4E3Aboolean\uFF0C\u7136\u540E\u5224\u65ADC extends true \u8FD8\u662Ffalse\uFF0C\u8FD4\u56DE\u6B63\u786E\u7684\u503C</p><div class="language-js"><pre><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">If</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">C</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">F</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">C</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">F</span></span>\n<span class="line"></span></code></pre></div>', 36);
const _hoisted_37 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_37);
}
var _6_typeChallenges = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, _6_typeChallenges as default };
